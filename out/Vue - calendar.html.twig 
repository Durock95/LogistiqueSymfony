calendar.html.twig : 

{# templates/booking/calendar.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Calendar
{% endblock %}

{% block stylesheets %}
    <link
            rel="stylesheet" href="{{ asset('styles/calendar.css') }}" type="text/css">
    {# <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'> #}
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>
    {# <script src='fullcalendar/core/locales/fr.global.js'></script> #}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const calendarEl = document.getElementById('calendar-holder');

            const calendar = new FullCalendar.Calendar(calendarEl, {
                defaultView: 'dayGridMonth',
                locale: 'fr',
                editable: true,
                events: '/calendar',
                eventDrop: function (info) {
                    console.log('Dropped event', info.event);
                    updateEvent(info.event);
                },
                eventClick: function (info) {
                    console.log('Clicked event', info.event);
                },
                eventResizeStop: function (info) {
                    console.log('Resized event', info.event);
                    updateEvent(info.event);
                },
                eventCreate: function (info) {
                    console.log('Created event', info.event);
                    updateEvent(info.event);
                },
                eventDestroy: function (info) {
                    // Envoi de la mise à jour au backend
                    // fetch(`/api/${eventId}/edit`, {
                    //     method: 'POST',
                    //     headers: {
                    //         'Content-Type': 'application/json',
                    //     },
                    //     body: JSON.stringify(updatedEvent),
                    // })
                    //     .then(response => response.json())
                    //     .then(data => {
                    //         console.log('Event updated:', data);  // Réponse du serveur
                    //     })
                    //     .catch(error => {
                    //         console.error('Error updating event:', error);
                    //     });
                },
                eventSources: [
                    {
                        url: '/fc-load-events',
                        method: 'POST',
                        extraParams: {
                            filters: JSON.stringify({})
                        },
                        failure: () => { // alert('There was an error while fetching FullCalendar!');
                        }
                    },
                ],
                headerToolbar: {
                    start: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                eventResize: function (info) {
                    updateEvent(info.event);
                },
                timeZone: 'Europe/Paris',

            });
            calendar.render();
            // calendar.on('eventChange', (e) => {
            //     let evts = calendar.getEvents();
            //     console.log(e.event.title);
            //   let url = `/api/${e.event.id}/edit`;
            //   let donnees = {
            //     "id": e.event.id,
            //     "title": e.event.title,
            //     // "description: e.event.extentedProps.description,
            //     "start": e.event.start,
            //     "end": e.event.end,
            //     // "backgroundColor": e.event.backgroundColor,
            //     "allDay": e.event.allDay
            //   }
            //   // console.log(donnees);
            //  let xhr = new XMLHttpRequest();
            //  xhr.open("GET", url);
            //  xhr.send(JSON.stringify(donnees));
            //
            // });
            function updateEvent(event) {
                console.log('Dropped event', event);
                fetch(`/api/${event.id}/edit`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        start: new Date(event.start).toISOString(),
                        end: event.end ? new Date(event.end).toISOString() : new Date(event.start).toISOString()
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (!data.success) {
                            alert('Could not update event');
                            calendar.refetchEvents();
                            console.log(data)
                        }
                    })
                    .catch(error => {
                        alert('Could not update event');
                        console.log(error);
                    });
            }
        });
    </script>
{% endblock %}

{% block body %}
    {# {{dump(data)}} #}
    <a href="{{ path('app_booking_new') }}">Create new booking</a>

    <div id="calendar-holder"></div>
{% endblock %}